#!/usr/bin/env python
#===================================================================================================
# This script generates a json file for dynamo injection for a given file (argument) which is
# assumed to be located on the remote Tier-2 storage. The only argument for the script is the
# file name.
#===================================================================================================
import os,sys,subprocess,time,json,requests
import MySQLdb
import rex

import dynamo_inject

Db = MySQLdb.connect(read_default_file="/etc/my.cnf",read_default_group="mysql",db="Bambu")
Cursor = Db.cursor()
DYNAMO_HOST = 't3serv009.mit.edu'
CERT = '/tmp/x509up_u%d' % os.getuid()

usage = "\n   usage:  dynamo-delete-dataset  <file> \n"

#===================================================================================================
#  H E L P E R S
#===================================================================================================

def getFileInfo(file):
    # extract the unique request id this file is part of

    f = file.split('/')

    # make sure we have a good file name
    if len(f) < 5:
        return ()
        
    # decode the config, version and dataset
    dataset = f[-1]
    version = f[-2]
    mitcfg = f[-3]

    return (mitcfg, version, dataset)

#===================================================================================================
#  M A I N
#===================================================================================================
# make sure command line is complete
if len(sys.argv) < 1:
    print " ERROR -- " + usage
    sys.exit(1)

# command line variables
file = sys.argv[1]
print " INFO - dynamo-delete-dataset %s"%(file)
            
# find all relevant infromation about the file
(config,version,dataset) = getFileInfo(file)

# delete from Dynamo

lfn = file[file.find("/store/user"):]
data = \
    { 'dataset':
          [ { 'name': "%s/%s/%s"%(config,version,dataset) } ]
      }
    
print dynamo_inject.inject(DYNAMO_HOST,CERT,CERT,json.dumps(data),True)
